(def lst_i_1 (vector))
(def lst_i_0 (vector))
(def lst_e_1 (vector))
(def lst_e_0 (vector))
(def lst_s_1 (vector))
(def lst_s_0 (vector))
(def lrea_i 0)
(def lrea_e 0)
(def lrea_s 0)
(defn do_task [pal num] (println "Tarea Realizandose de " pal " Tiempo estimado: " num " segundos"))
(defn add_task
[nu nu2 nu3]
(cond
(= nu 0)(if (= nu2 1) (def lst_i_1 (conj lst_i_1 nu3)) (def lst_i_0(conj lst_i_0 nu3)))
(= nu 1) (if (= nu2 1) (def lst_e_1 (conj lst_e_1 nu3)) (def lst_e_0(conj lst_e_0 nu3)))
:else (if (= nu2 1) (def lst_s_1 (conj lst_s_1 nu3)) (def lst_s_0(conj lst_s_0 nu3)))))
(def cont 0)
(def num_proc 0)
(def palabra "Unknown")
(while (= 5 5)
      (do
        (if (= (mod cont 3) 0) (add_task (rand-int 3) (rand-int 2) (+ (rand-int 9) 1)))
        (def activo false)
        (def r_prev_impre false)
        (def r_prev_email false)
        (def r_prev_es false)
        (def lst_i_1 (into [] (concat lst_i_1 lst_i_0)))
        (def lst_e_1 (into [] (concat lst_e_1 lst_e_0)))
        (def lst_s_1 (into [] (concat lst_s_1 lst_s_0)))
        (def lst_i_0 (vector))
        (def lst_e_0 (vector))
        (def lst_s_0 (vector))
        (println "Tareas encoladas de Impresion " lst_i_1)
        (println "Tareas encoladas de Email " lst_e_1)
        (println "Tareas encoladas de E/S " lst_s_1)
        (if (and (not r_prev_impre) (and (not activo) (not(empty? lst_i_1))))
          (do
            (def activo true)
            (def r_prev_impre true)
            (def r_prev_es false)
            (def r_prev_email false)
            (def num_proc (first lst_i_1))
            (def lst_i_1 (into[] (rest lst_i_1)))
            (def palabra "Impresion")
            )
          )
        (if (and (not r_prev_email) (and (not activo) (not(empty? lst_e_1))))
          (do
            (def activo true)
            (def r_prev_email true)
            (def r_prev_impre false)
            (def r_prev_es false)
            (def num_proc (first lst_e_1))
            (def lst_e_1 (into[] (rest lst_e_1)))
            (def palabra "Email")
            )
          )
        (if (and (not r_prev_es) (and (not activo) (not(empty? lst_s_1))))
          (do
            (def activo true)
            (def r_prev_es true)
            (def r_prev_impre false)
            (def r_prev_email false)
            (def num_proc (first lst_s_1))
            (def lst_s_1 (into[] (rest lst_s_1)))
            (def palabra "E/S")
            )
          )

        (if (= num_proc 0) (do
                             (def activo false)
                             (println "Tarea Terminada")
                             (cond
                               (= palabra "Impresion") (def lrea_i (+ lrea_i 1))
                               (= palabra "Email") (def lrea_e (+ lrea_e 1))
                               (= palabra "E/S") (def lrea_s (+ lrea_s 1))
                               )

                             ) (do_task palabra num_proc))
        (if (activo) (def num_proc (- num_proc 1)))
        (println "Tareas realizadas de Impresion " lrea_i)
        (println "Tareas realizadas de Email " lrea_e)
        (println "Tareas realizadas de E/S " lrea_s)
        (def cont (+ cont 1))
        (Thread/sleep 1000)
         )
  )

